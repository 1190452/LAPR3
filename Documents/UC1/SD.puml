@startuml
autonumber

actor "Non-Registered user" as ADM
participant ":RegistUserUI" as UI
participant ":RegistUser\nController" as CTRL
participant ":Plataform" as PLAT
participant "User" as _ORG
participant "user: User" as ORG
participant "add: Address" as ADD
participant "ccd: CreditCard" as CDD
participant "api: EmailAPI" as API
participant ":UserHandler" as USH
participant ":DataBase" as DBE


activate ADM
ADM -> UI : begins the registration process of an user
activate UI

UI --> ADM : requests information about the user (e.g. name,email,NIF, password, credits, street,latitude,longitude, number, monthExpiration, yearExpiration, ccv)
deactivate UI

ADM -> UI : inserts the information
activate UI
UI -> CTRL : sendEmail(email)
activate CTRL

CTRL -> PLAT : api = getEmailAPI()
activate PLAT
CTRL -> API: sendEmail(email)
activate API
deactivate API
deactivate PLAT
deactivate CTRL
UI -> ADM : shows a message that an email was send to confirm
deactivate UI

ADM -> UI : confirms and begins the registration process of an user
activate UI
UI -> CTRL : newUser(name,email,NIF, password, credits, street,latitude,longitude, number, monthExpiration, yearExpiration, ccv)
activate CTRL


CTRL -> PLAT: user = newUser(name,email,NIF, password, credits, street,latitude,longitude, number, monthExpiration, yearExpiration, ccv)
activate PLAT

PLAT -> _ORG: address = newAddress(latitude, longitude, street)
activate _ORG
_ORG --> ADD ** : create(latitude, longitude, street)
deactivate _ORG

PLAT -> _ORG: creditCard = newCreditCard(number, monthExpiration, yearExpiration, ccv)
activate _ORG
_ORG --> CDD ** : create(number, monthExpiration, yearExpiration, ccv)
deactivate _ORG

PLAT --> ORG ** : create(name, email, nif, , password, credits, address, creditCard)


PLAT -> USH: saveUser(user)
activate USH
USH -> DBE: save(name, email, nif, password, credits, address, creditCard)
activate DBE
deactivate PLAT
deactivate USH
deactivate DBE


deactivate CTRL
UI --> ADM : successful operation
deactivate UI

deactivate ADM
@enduml
